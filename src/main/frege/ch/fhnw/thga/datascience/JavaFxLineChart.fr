
module ch.fhnw.thga.datascience.JavaFxLineChart where

import fregefx.JavaFxType
import fregefx.JavaFxAll 
import fregefx.JavaFxUtils

import ch.fhnw.thga.datascience.Regression

main args = do    
    FregeFX.launch $ withResizableStage buildNode

withResizableStage :: (Pane -> Stage -> JFX Node) -> Stage -> JFX ()
withResizableStage buildNode stage = do
    pane <- AnchorPane.new ()
    node <- buildNode pane stage
    AnchorPane.setBottomAnchor node  0.0
    AnchorPane.setLeftAnchor   node  0.0
    AnchorPane.setRightAnchor  node  0.0
    AnchorPane.setTopAnchor    node  0.0
    pane `addNode` return node
    scene <- Scene.new pane
    stage.setScene scene
    stage.show

buildNode :: Pane -> Stage -> JFX Node
buildNode pane stage = do
    stage.setTitle "FregeFX JavaFxLineChart"
    sheets <- pane.getStylesheets
    sheets.add "file:./src/main/frege/ch/fhnw/thga/datascience/JavaFxLineChart.css"

    xAxis <- NumberAxis.new "Weight (kg)"    60.0    80.0    5.0
    yAxis <- NumberAxis.new "Height (cm)"   100.0   210.0   20.0
    lineChart <- LineChart.new xAxis yAxis
    lineChart.setTitle "Linear Regression"

    -- add all regression data points
    regSeries <- XYChartSeries.new ()
    (a,b) = linearRegression weightHeight
    regSeries.setName $ "f(x)= " ++ show a ++ " + " ++ show b ++ " x"
    regData = map (\x -> (x, a + b * x)) $ map fromInt [60, 80]
    for regData $ addXY regSeries
    lineChart.getData >>= _.add regSeries

    -- add all sample data points
    xyseries <- XYChartSeries.new ()
    xyseries.setName "Original Data"
    for weightHeight $ addXY xyseries
    lineChart.getData >>= _.add xyseries

    return lineChart

addXY :: XYChartSeries -> (Double, Double) -> JFX ()
addXY series (x, y) = do
    xypoint <- XYChartData.new x y
    series.getData >>= _.add xypoint
    return ()

